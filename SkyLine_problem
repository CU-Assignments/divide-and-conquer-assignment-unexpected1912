class Solution {
    public List<List<Integer>> getSkyline(int[][] buildings) {
        List<List<Integer>> result = new ArrayList<>();
        List<int[]> height = new ArrayList<>();
        
        for (int[] b : buildings) {
            height.add(new int[]{b[0], -b[2]});
            height.add(new int[]{b[1], b[2]});
        }
        
        Collections.sort(height, (a, b) -> {
            if (a[0] != b[0]) return Integer.compare(a[0], b[0]);
            return Integer.compare(a[1], b[1]);
        });

        TreeMap<Integer, Integer> heightMap = new TreeMap<>();
        heightMap.put(0, 1);
        
        int prevMaxHeight = 0;
        
        for (int[] h : height) {
            if (h[1] < 0) {
                heightMap.put(-h[1], heightMap.getOrDefault(-h[1], 0) + 1);
            } else {
                if (heightMap.get(h[1]) == 1) heightMap.remove(h[1]);
                else heightMap.put(h[1], heightMap.get(h[1]) - 1);
            }

            int curMaxHeight = heightMap.lastKey();

            if (prevMaxHeight != curMaxHeight) {
                result.add(Arrays.asList(h[0], curMaxHeight));
                prevMaxHeight = curMaxHeight;
            }
        }

        return result;
    }
}